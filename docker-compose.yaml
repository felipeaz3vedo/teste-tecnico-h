version: '3.9'

services:
  client:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_FRONTEND_PORT=${VITE_FRONTEND_PORT}
      - VITE_BACKEND_PORT=${VITE_BACKEND_PORT}
    expose:
      - ${VITE_FRONTEND_PORT}
    ports:
      - ${VITE_FRONTEND_PORT}:${VITE_FRONTEND_PORT}
    restart: unless-stopped
    volumes:
      - ./frontend:/app

  server:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - db

  db:
    container_name: postgres
    image: postgres
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres

  dbadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    depends_on:
      - db
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres-data:
  pgadmin-data:


